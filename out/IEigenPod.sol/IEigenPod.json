{"abi":[{"type":"function","name":"MAX_RESTAKED_BALANCE_GWEI_PER_VALIDATOR","inputs":[],"outputs":[{"name":"","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"activateRestaking","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"eigenPodManager","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IEigenPodManager"}],"stateMutability":"view"},{"type":"function","name":"hasRestaked","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"initialize","inputs":[{"name":"owner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mostRecentWithdrawalTimestamp","inputs":[],"outputs":[{"name":"","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"nonBeaconChainETHBalanceWei","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"podOwner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"provenWithdrawal","inputs":[{"name":"validatorPubkeyHash","type":"bytes32","internalType":"bytes32"},{"name":"slot","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"recoverTokens","inputs":[{"name":"tokenList","type":"address[]","internalType":"contract IERC20[]"},{"name":"amountsToWithdraw","type":"uint256[]","internalType":"uint256[]"},{"name":"recipient","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stake","inputs":[{"name":"pubkey","type":"bytes","internalType":"bytes"},{"name":"signature","type":"bytes","internalType":"bytes"},{"name":"depositDataRoot","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"validatorPubkeyHashToInfo","inputs":[{"name":"validatorPubkeyHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IEigenPod.ValidatorInfo","components":[{"name":"validatorIndex","type":"uint64","internalType":"uint64"},{"name":"restakedBalanceGwei","type":"uint64","internalType":"uint64"},{"name":"mostRecentBalanceUpdateTimestamp","type":"uint64","internalType":"uint64"},{"name":"status","type":"uint8","internalType":"enum IEigenPod.VALIDATOR_STATUS"}]}],"stateMutability":"view"},{"type":"function","name":"validatorPubkeyToInfo","inputs":[{"name":"validatorPubkey","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IEigenPod.ValidatorInfo","components":[{"name":"validatorIndex","type":"uint64","internalType":"uint64"},{"name":"restakedBalanceGwei","type":"uint64","internalType":"uint64"},{"name":"mostRecentBalanceUpdateTimestamp","type":"uint64","internalType":"uint64"},{"name":"status","type":"uint8","internalType":"enum IEigenPod.VALIDATOR_STATUS"}]}],"stateMutability":"view"},{"type":"function","name":"validatorStatus","inputs":[{"name":"validatorPubkey","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"uint8","internalType":"enum IEigenPod.VALIDATOR_STATUS"}],"stateMutability":"view"},{"type":"function","name":"validatorStatus","inputs":[{"name":"pubkeyHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"uint8","internalType":"enum IEigenPod.VALIDATOR_STATUS"}],"stateMutability":"view"},{"type":"function","name":"verifyAndProcessWithdrawals","inputs":[{"name":"oracleTimestamp","type":"uint64","internalType":"uint64"},{"name":"stateRootProof","type":"tuple","internalType":"struct BeaconChainProofs.StateRootProof","components":[{"name":"beaconStateRoot","type":"bytes32","internalType":"bytes32"},{"name":"proof","type":"bytes","internalType":"bytes"}]},{"name":"withdrawalProofs","type":"tuple[]","internalType":"struct BeaconChainProofs.WithdrawalProof[]","components":[{"name":"withdrawalProof","type":"bytes","internalType":"bytes"},{"name":"slotProof","type":"bytes","internalType":"bytes"},{"name":"executionPayloadProof","type":"bytes","internalType":"bytes"},{"name":"timestampProof","type":"bytes","internalType":"bytes"},{"name":"historicalSummaryBlockRootProof","type":"bytes","internalType":"bytes"},{"name":"blockRootIndex","type":"uint64","internalType":"uint64"},{"name":"historicalSummaryIndex","type":"uint64","internalType":"uint64"},{"name":"withdrawalIndex","type":"uint64","internalType":"uint64"},{"name":"blockRoot","type":"bytes32","internalType":"bytes32"},{"name":"slotRoot","type":"bytes32","internalType":"bytes32"},{"name":"timestampRoot","type":"bytes32","internalType":"bytes32"},{"name":"executionPayloadRoot","type":"bytes32","internalType":"bytes32"}]},{"name":"validatorFieldsProofs","type":"bytes[]","internalType":"bytes[]"},{"name":"validatorFields","type":"bytes32[][]","internalType":"bytes32[][]"},{"name":"withdrawalFields","type":"bytes32[][]","internalType":"bytes32[][]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"verifyBalanceUpdates","inputs":[{"name":"oracleTimestamp","type":"uint64","internalType":"uint64"},{"name":"validatorIndices","type":"uint40[]","internalType":"uint40[]"},{"name":"stateRootProof","type":"tuple","internalType":"struct BeaconChainProofs.StateRootProof","components":[{"name":"beaconStateRoot","type":"bytes32","internalType":"bytes32"},{"name":"proof","type":"bytes","internalType":"bytes"}]},{"name":"validatorFieldsProofs","type":"bytes[]","internalType":"bytes[]"},{"name":"validatorFields","type":"bytes32[][]","internalType":"bytes32[][]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"verifyWithdrawalCredentials","inputs":[{"name":"oracleTimestamp","type":"uint64","internalType":"uint64"},{"name":"stateRootProof","type":"tuple","internalType":"struct BeaconChainProofs.StateRootProof","components":[{"name":"beaconStateRoot","type":"bytes32","internalType":"bytes32"},{"name":"proof","type":"bytes","internalType":"bytes"}]},{"name":"validatorIndices","type":"uint40[]","internalType":"uint40[]"},{"name":"withdrawalCredentialProofs","type":"bytes[]","internalType":"bytes[]"},{"name":"validatorFields","type":"bytes32[][]","internalType":"bytes32[][]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"withdrawBeforeRestaking","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"withdrawNonBeaconChainETHBalanceWei","inputs":[{"name":"recipient","type":"address","internalType":"address"},{"name":"amountToWithdraw","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"withdrawRestakedBeaconChainETH","inputs":[{"name":"recipient","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"withdrawableRestakedExecutionLayerGwei","inputs":[],"outputs":[{"name":"","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"event","name":"EigenPodStaked","inputs":[{"name":"pubkey","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"FullWithdrawalRedeemed","inputs":[{"name":"validatorIndex","type":"uint40","indexed":false,"internalType":"uint40"},{"name":"withdrawalTimestamp","type":"uint64","indexed":false,"internalType":"uint64"},{"name":"recipient","type":"address","indexed":true,"internalType":"address"},{"name":"withdrawalAmountGwei","type":"uint64","indexed":false,"internalType":"uint64"}],"anonymous":false},{"type":"event","name":"NonBeaconChainETHReceived","inputs":[{"name":"amountReceived","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"NonBeaconChainETHWithdrawn","inputs":[{"name":"recipient","type":"address","indexed":true,"internalType":"address"},{"name":"amountWithdrawn","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"PartialWithdrawalRedeemed","inputs":[{"name":"validatorIndex","type":"uint40","indexed":false,"internalType":"uint40"},{"name":"withdrawalTimestamp","type":"uint64","indexed":false,"internalType":"uint64"},{"name":"recipient","type":"address","indexed":true,"internalType":"address"},{"name":"partialWithdrawalAmountGwei","type":"uint64","indexed":false,"internalType":"uint64"}],"anonymous":false},{"type":"event","name":"RestakedBeaconChainETHWithdrawn","inputs":[{"name":"recipient","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RestakingActivated","inputs":[{"name":"podOwner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ValidatorBalanceUpdated","inputs":[{"name":"validatorIndex","type":"uint40","indexed":false,"internalType":"uint40"},{"name":"balanceTimestamp","type":"uint64","indexed":false,"internalType":"uint64"},{"name":"newValidatorBalanceGwei","type":"uint64","indexed":false,"internalType":"uint64"}],"anonymous":false},{"type":"event","name":"ValidatorRestaked","inputs":[{"name":"validatorIndex","type":"uint40","indexed":false,"internalType":"uint40"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"MAX_RESTAKED_BALANCE_GWEI_PER_VALIDATOR()":"1d905d5c","activateRestaking()":"0cd4649e","eigenPodManager()":"4665bcda","hasRestaked()":"3106ab53","initialize(address)":"c4d66de8","mostRecentWithdrawalTimestamp()":"87e0d289","nonBeaconChainETHBalanceWei()":"fe80b087","podOwner()":"0b18ff66","provenWithdrawal(bytes32,uint64)":"34bea20a","recoverTokens(address[],uint256[],address)":"dda3346c","stake(bytes,bytes,bytes32)":"9b4e4634","validatorPubkeyHashToInfo(bytes32)":"6fcd0e53","validatorPubkeyToInfo(bytes)":"b522538a","validatorStatus(bytes)":"58eaee79","validatorStatus(bytes32)":"7439841f","verifyAndProcessWithdrawals(uint64,(bytes32,bytes),(bytes,bytes,bytes,bytes,bytes,uint64,uint64,uint64,bytes32,bytes32,bytes32,bytes32)[],bytes[],bytes32[][],bytes32[][])":"e251ef52","verifyBalanceUpdates(uint64,uint40[],(bytes32,bytes),bytes[],bytes32[][])":"a50600f4","verifyWithdrawalCredentials(uint64,(bytes32,bytes),uint40[],bytes[],bytes32[][])":"3f65cf19","withdrawBeforeRestaking()":"baa7145a","withdrawNonBeaconChainETHBalanceWei(address,uint256)":"e2c83445","withdrawRestakedBeaconChainETH(address,uint256)":"c4907442","withdrawableRestakedExecutionLayerGwei()":"3474aa16"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"pubkey\",\"type\":\"bytes\"}],\"name\":\"EigenPodStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint40\",\"name\":\"validatorIndex\",\"type\":\"uint40\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"withdrawalTimestamp\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"withdrawalAmountGwei\",\"type\":\"uint64\"}],\"name\":\"FullWithdrawalRedeemed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountReceived\",\"type\":\"uint256\"}],\"name\":\"NonBeaconChainETHReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountWithdrawn\",\"type\":\"uint256\"}],\"name\":\"NonBeaconChainETHWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint40\",\"name\":\"validatorIndex\",\"type\":\"uint40\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"withdrawalTimestamp\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"partialWithdrawalAmountGwei\",\"type\":\"uint64\"}],\"name\":\"PartialWithdrawalRedeemed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RestakedBeaconChainETHWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"podOwner\",\"type\":\"address\"}],\"name\":\"RestakingActivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint40\",\"name\":\"validatorIndex\",\"type\":\"uint40\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"balanceTimestamp\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"newValidatorBalanceGwei\",\"type\":\"uint64\"}],\"name\":\"ValidatorBalanceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint40\",\"name\":\"validatorIndex\",\"type\":\"uint40\"}],\"name\":\"ValidatorRestaked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_RESTAKED_BALANCE_GWEI_PER_VALIDATOR\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activateRestaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eigenPodManager\",\"outputs\":[{\"internalType\":\"contract IEigenPodManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasRestaked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mostRecentWithdrawalTimestamp\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonBeaconChainETHBalanceWei\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"podOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"validatorPubkeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"slot\",\"type\":\"uint64\"}],\"name\":\"provenWithdrawal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokenList\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsToWithdraw\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"recoverTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"pubkey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"depositDataRoot\",\"type\":\"bytes32\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"validatorPubkeyHash\",\"type\":\"bytes32\"}],\"name\":\"validatorPubkeyHashToInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"validatorIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"restakedBalanceGwei\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"mostRecentBalanceUpdateTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"enum IEigenPod.VALIDATOR_STATUS\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct IEigenPod.ValidatorInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"validatorPubkey\",\"type\":\"bytes\"}],\"name\":\"validatorPubkeyToInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"validatorIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"restakedBalanceGwei\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"mostRecentBalanceUpdateTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"enum IEigenPod.VALIDATOR_STATUS\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct IEigenPod.ValidatorInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"validatorPubkey\",\"type\":\"bytes\"}],\"name\":\"validatorStatus\",\"outputs\":[{\"internalType\":\"enum IEigenPod.VALIDATOR_STATUS\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"pubkeyHash\",\"type\":\"bytes32\"}],\"name\":\"validatorStatus\",\"outputs\":[{\"internalType\":\"enum IEigenPod.VALIDATOR_STATUS\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"oracleTimestamp\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"beaconStateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"internalType\":\"struct BeaconChainProofs.StateRootProof\",\"name\":\"stateRootProof\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"withdrawalProof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"slotProof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"executionPayloadProof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"timestampProof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"historicalSummaryBlockRootProof\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"blockRootIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"historicalSummaryIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"withdrawalIndex\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"blockRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"slotRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"timestampRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"executionPayloadRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct BeaconChainProofs.WithdrawalProof[]\",\"name\":\"withdrawalProofs\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes[]\",\"name\":\"validatorFieldsProofs\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[][]\",\"name\":\"validatorFields\",\"type\":\"bytes32[][]\"},{\"internalType\":\"bytes32[][]\",\"name\":\"withdrawalFields\",\"type\":\"bytes32[][]\"}],\"name\":\"verifyAndProcessWithdrawals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"oracleTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint40[]\",\"name\":\"validatorIndices\",\"type\":\"uint40[]\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"beaconStateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"internalType\":\"struct BeaconChainProofs.StateRootProof\",\"name\":\"stateRootProof\",\"type\":\"tuple\"},{\"internalType\":\"bytes[]\",\"name\":\"validatorFieldsProofs\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[][]\",\"name\":\"validatorFields\",\"type\":\"bytes32[][]\"}],\"name\":\"verifyBalanceUpdates\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"oracleTimestamp\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"beaconStateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"internalType\":\"struct BeaconChainProofs.StateRootProof\",\"name\":\"stateRootProof\",\"type\":\"tuple\"},{\"internalType\":\"uint40[]\",\"name\":\"validatorIndices\",\"type\":\"uint40[]\"},{\"internalType\":\"bytes[]\",\"name\":\"withdrawalCredentialProofs\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[][]\",\"name\":\"validatorFields\",\"type\":\"bytes32[][]\"}],\"name\":\"verifyWithdrawalCredentials\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawBeforeRestaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountToWithdraw\",\"type\":\"uint256\"}],\"name\":\"withdrawNonBeaconChainETHBalanceWei\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawRestakedBeaconChainETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawableRestakedExecutionLayerGwei\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"details\":\"Note that all beacon chain balances are stored as gwei within the beacon chain datastructures. We choose   to account balances in terms of gwei in the EigenPod contract and convert to wei when making calls to other contracts\",\"kind\":\"dev\",\"methods\":{\"mostRecentWithdrawalTimestamp()\":{\"details\":\"This variable is only updated when the `withdrawBeforeRestaking` function is called, which can only occur before `hasRestaked` is set to true for this pod. Proofs for this pod are only valid against Beacon Chain state roots corresponding to timestamps after the stored `mostRecentWithdrawalTimestamp`.\"},\"verifyAndProcessWithdrawals(uint64,(bytes32,bytes),(bytes,bytes,bytes,bytes,bytes,uint64,uint64,uint64,bytes32,bytes32,bytes32,bytes32)[],bytes[],bytes32[][],bytes32[][])\":{\"params\":{\"oracleTimestamp\":\"is the timestamp of the oracle slot that the withdrawal is being proven against\",\"validatorFields\":\"are the fields of the validators being proven\",\"validatorFieldsProofs\":\"is the proof of the validator's fields' in the validator tree\",\"withdrawalFields\":\"are the fields of the withdrawals being proven\",\"withdrawalProofs\":\"is the information needed to check the veracity of the block numbers and withdrawals being proven\"}},\"verifyBalanceUpdates(uint64,uint40[],(bytes32,bytes),bytes[],bytes32[][])\":{\"details\":\"For more details on the Beacon Chain spec, see: https://github.com/ethereum/consensus-specs/blob/dev/specs/phase0/beacon-chain.md#validator\",\"params\":{\"oracleTimestamp\":\"The oracleTimestamp whose state root the `proof` will be proven against.        Must be within `VERIFY_BALANCE_UPDATE_WINDOW_SECONDS` of the current block.\",\"validatorFields\":\"are the fields of the \\\"Validator Container\\\", refer to consensus specs\",\"validatorFieldsProofs\":\"proofs against the `beaconStateRoot` for each validator in `validatorFields`\",\"validatorIndices\":\"is the list of indices of the validators being proven, refer to consensus specs \"}},\"verifyWithdrawalCredentials(uint64,(bytes32,bytes),uint40[],bytes[],bytes32[][])\":{\"params\":{\"oracleTimestamp\":\"is the Beacon Chain timestamp whose state root the `proof` will be proven against.\",\"validatorFields\":\"are the fields of the \\\"Validator Container\\\", refer to consensus specs for details: https://github.com/ethereum/consensus-specs/blob/dev/specs/phase0/beacon-chain.md#validator\",\"validatorIndices\":\"is the list of indices of the validators being proven, refer to consensus specs\",\"withdrawalCredentialProofs\":\"is an array of proofs, where each proof proves each ETH validator's balance and withdrawal credentials against a beacon chain state root\"}},\"withdrawRestakedBeaconChainETH(address,uint256)\":{\"details\":\"The podOwner must have already proved sufficient withdrawals, so that this pod's `withdrawableRestakedExecutionLayerGwei` exceeds the `amountWei` input (when converted to GWEI).Reverts if `amountWei` is not a whole Gwei amount\"}},\"title\":\"The implementation contract used for restaking beacon chain ETH on EigenLayer\",\"version\":1},\"userdoc\":{\"events\":{\"EigenPodStaked(bytes)\":{\"notice\":\"Emitted when an ETH validator stakes via this eigenPod\"},\"FullWithdrawalRedeemed(uint40,uint64,address,uint64)\":{\"notice\":\"Emitted when an ETH validator is prove to have withdrawn from the beacon chain\"},\"NonBeaconChainETHReceived(uint256)\":{\"notice\":\"Emitted when ETH is received via the `receive` fallback\"},\"NonBeaconChainETHWithdrawn(address,uint256)\":{\"notice\":\"Emitted when ETH that was previously received via the `receive` fallback is withdrawn\"},\"PartialWithdrawalRedeemed(uint40,uint64,address,uint64)\":{\"notice\":\"Emitted when a partial withdrawal claim is successfully redeemed\"},\"RestakedBeaconChainETHWithdrawn(address,uint256)\":{\"notice\":\"Emitted when restaked beacon chain ETH is withdrawn from the eigenPod.\"},\"RestakingActivated(address)\":{\"notice\":\"Emitted when podOwner enables restaking\"},\"ValidatorBalanceUpdated(uint40,uint64,uint64)\":{\"notice\":\"Emitted when an ETH validator's  balance is proven to be updated.  Here newValidatorBalanceGwei\"},\"ValidatorRestaked(uint40)\":{\"notice\":\"Emitted when an ETH validator's withdrawal credentials are successfully verified to be pointed to this eigenPod\"}},\"kind\":\"user\",\"methods\":{\"MAX_RESTAKED_BALANCE_GWEI_PER_VALIDATOR()\":{\"notice\":\"The max amount of eth, in gwei, that can be restaked per validator\"},\"activateRestaking()\":{\"notice\":\"Called by the pod owner to activate restaking by withdrawing all existing ETH from the pod and preventing further withdrawals via \\\"withdrawBeforeRestaking()\\\"\"},\"eigenPodManager()\":{\"notice\":\"The single EigenPodManager for EigenLayer\"},\"hasRestaked()\":{\"notice\":\"an indicator of whether or not the podOwner has ever \\\"fully restaked\\\" by successfully calling `verifyCorrectWithdrawalCredentials`.\"},\"initialize(address)\":{\"notice\":\"Used to initialize the pointers to contracts crucial to the pod's functionality, in beacon proxy construction from EigenPodManager\"},\"mostRecentWithdrawalTimestamp()\":{\"notice\":\"The latest timestamp at which the pod owner withdrew the balance of the pod, via calling `withdrawBeforeRestaking`.\"},\"nonBeaconChainETHBalanceWei()\":{\"notice\":\"any ETH deposited into the EigenPod contract via the `receive` fallback function\"},\"podOwner()\":{\"notice\":\"The owner of this EigenPod\"},\"provenWithdrawal(bytes32,uint64)\":{\"notice\":\"mapping that tracks proven withdrawals\"},\"recoverTokens(address[],uint256[],address)\":{\"notice\":\"called by owner of a pod to remove any ERC20s deposited in the pod\"},\"stake(bytes,bytes,bytes32)\":{\"notice\":\"Called by EigenPodManager when the owner wants to create another ETH validator.\"},\"validatorPubkeyHashToInfo(bytes32)\":{\"notice\":\"Returns the validatorInfo struct for the provided pubkeyHash\"},\"validatorPubkeyToInfo(bytes)\":{\"notice\":\"Returns the validatorInfo struct for the provided pubkey\"},\"validatorStatus(bytes)\":{\"notice\":\"This returns the status of a given validator pubkey\"},\"validatorStatus(bytes32)\":{\"notice\":\"This returns the status of a given validator\"},\"verifyAndProcessWithdrawals(uint64,(bytes32,bytes),(bytes,bytes,bytes,bytes,bytes,uint64,uint64,uint64,bytes32,bytes32,bytes32,bytes32)[],bytes[],bytes32[][],bytes32[][])\":{\"notice\":\"This function records full and partial withdrawals on behalf of one of the Ethereum validators for this EigenPod\"},\"verifyBalanceUpdates(uint64,uint40[],(bytes32,bytes),bytes[],bytes32[][])\":{\"notice\":\"This function records an update (either increase or decrease) in the pod's balance in the StrategyManager.   It also verifies a merkle proof of the validator's current beacon chain balance.  \"},\"verifyWithdrawalCredentials(uint64,(bytes32,bytes),uint40[],bytes[],bytes32[][])\":{\"notice\":\"This function verifies that the withdrawal credentials of validator(s) owned by the podOwner are pointed to this contract. It also verifies the effective balance  of the validator.  It verifies the provided proof of the ETH validator against the beacon chain state root, marks the validator as 'active' in EigenLayer, and credits the restaked ETH in Eigenlayer.\"},\"withdrawBeforeRestaking()\":{\"notice\":\"Called by the pod owner to withdraw the balance of the pod when `hasRestaked` is set to false\"},\"withdrawNonBeaconChainETHBalanceWei(address,uint256)\":{\"notice\":\"Called by the pod owner to withdraw the nonBeaconChainETHBalanceWei\"},\"withdrawRestakedBeaconChainETH(address,uint256)\":{\"notice\":\"Transfers `amountWei` in ether from this contract to the specified `recipient` addressCalled by EigenPodManager to withdrawBeaconChainETH that has been added to the EigenPod's balance due to a withdrawal from the beacon chain.\"},\"withdrawableRestakedExecutionLayerGwei()\":{\"notice\":\"the amount of execution layer ETH in this contract that is staked in EigenLayer (i.e. withdrawn from beaconchain but not EigenLayer),\"}},\"notice\":\"Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-serviceThe main functionalities are: - creating new ETH validators with their withdrawal credentials pointed to this contract - proving from beacon chain state roots that withdrawal credentials are pointed to this contract - proving from beacon chain state roots the balances of ETH validators with their withdrawal credentials   pointed to this contract - updating aggregate balances in the EigenPodManager - withdrawing eth when withdrawals are initiated\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IEigenPod.sol\":\"IEigenPod\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"src/interfaces/IBeaconChainOracle.sol\":{\"keccak256\":\"0x0fef07aa6179c77198f1514e12e628aa1c876e04f9c181ec853a322179e5be00\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://51438325876cc2d4c77f58488a7e27b488015d1b663c50be6a5cafbd73b9c983\",\"dweb:/ipfs/QmViCuGoYZzi6wtXA8PPKigqVv3KMuNxEVQ1Td9dGqjL18\"]},\"src/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0xe1626408822f552043f945d9aea18c5cbf878ef160da55e6f98706ed3a2acc07\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://426f6dddc040f2040f48dd4236c4201a3c978b4417ec3b4bd1004f8a48b29aaa\",\"dweb:/ipfs/QmWgY46nZiw1KQYNYMrJDTz7S9Y4KhyUoM9zVD92Mkf51S\"]},\"src/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]},\"src/interfaces/IEigenPod.sol\":{\"keccak256\":\"0xb50c36ad96b6679bb80fd8331f949cbfbcba0f529026e1421a4d2bae64396eba\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5719181d780120f1e688c0da276992a8caf185815917f453b3550537c31ed4cc\",\"dweb:/ipfs/QmYprRC5ZEXhz3zAUND5E8Xjn6s5TL8ZF8QbnndVq7aVPR\"]},\"src/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0xd8a64dbed03d3a5cdbefe1af75968f2dde07f973749c2ef5197bf7187c3e448c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://27ccc7c1fd9352e9f9b357c9063d255dc0ed9583f43db09f786ac7497d7846b8\",\"dweb:/ipfs/QmeJzuJkE9m2NUNwZSp4tGZEZmih1LeucePup8hzMVDRbG\"]},\"src/interfaces/IPausable.sol\":{\"keccak256\":\"0x756023295ab9fb1159d36449d715b24bf2885bfa126b9e4dcf23a8a49bfd3ef3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://38e303f813393f7b10167315339e7a49bf234c43c123017a177778ea0c43aa96\",\"dweb:/ipfs/Qme9i982quv15iY9PScvNrtyh7KQDAob8ZfNmdAzcBQaov\"]},\"src/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d\",\"dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx\"]},\"src/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x5e52482a31d94401a8502f3014c4aada1142b4450fc0596dff8e1866a85fe092\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://17dc326c9361bc1453379f26545963557b2883b0c88bc07d4477e04dbcc0cc8c\",\"dweb:/ipfs/QmZXT7A816W5JH2ymirE2ETaJttqztFCsEL22AV8oEfCK9\"]},\"src/interfaces/ISlasher.sol\":{\"keccak256\":\"0x45dfaa2cfdde87f48a6ee38bb6fb739847aef7cf3f6137bdcd8c8a330559ec79\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1b7f6bd75b42fcaa91ceb7140cb2c41926a1fe6ee2d3161e4fe6186b181ba232\",\"dweb:/ipfs/QmZjbdKiSs33C9i3GDc3sdD39Pz4YPkDoKftowoUF4kHmY\"]},\"src/interfaces/IStrategy.sol\":{\"keccak256\":\"0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73\",\"dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ\"]},\"src/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0xccd308b0996295c92058b70c3b83563c009c074cb6815329c5f35e1b1a0571f4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cd1050445ff7aeb588b3b037aab53e2d92c3abd4620e94dfc95aca870e71b821\",\"dweb:/ipfs/QmUC96Ctwn3KQr6VSqHPpAVJ5qEUSVnugaxiZ8gfXygW92\"]},\"src/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0x7c444b786eabe8d9bf92586318e7c6883ed92772a630bd8fca4f65bc60f678d4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://dc49f3b34967ce7e9b0d9aa5a80eb470bff2278b91988c32e09bb76e1a42342c\",\"dweb:/ipfs/QmPPANFwA6abUpk2jY6uLRVSHKCH9nkKhHgjLvDPmn6q57\"]},\"src/libraries/Endian.sol\":{\"keccak256\":\"0xf3b72653ba2567a978d4612703fa5f71c5fcd015d8dac7818468f22772d90a9d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cee9d09370d968138d775c39525db4cd0768d60d17be7685519de12444e7dd2f\",\"dweb:/ipfs/QmUdGh8wpMei3edKiEWA6S96s9dRt4ekZKJ4nau356X8xQ\"]},\"src/libraries/Merkle.sol\":{\"keccak256\":\"0x606eabfdc2241dab76f7c6e6754324ae9eb12b0a5068984d2c11e2cd2fa94d98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a69c88393e9cf58ab066b75c75134b8c7cd51c242b726767cd8ec7e7d8351916\",\"dweb:/ipfs/QmaNMz951WD5JZeQs5yav29mZn2E6fvdFm5u3moMupRzSM\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes","name":"pubkey","type":"bytes","indexed":false}],"type":"event","name":"EigenPodStaked","anonymous":false},{"inputs":[{"internalType":"uint40","name":"validatorIndex","type":"uint40","indexed":false},{"internalType":"uint64","name":"withdrawalTimestamp","type":"uint64","indexed":false},{"internalType":"address","name":"recipient","type":"address","indexed":true},{"internalType":"uint64","name":"withdrawalAmountGwei","type":"uint64","indexed":false}],"type":"event","name":"FullWithdrawalRedeemed","anonymous":false},{"inputs":[{"internalType":"uint256","name":"amountReceived","type":"uint256","indexed":false}],"type":"event","name":"NonBeaconChainETHReceived","anonymous":false},{"inputs":[{"internalType":"address","name":"recipient","type":"address","indexed":true},{"internalType":"uint256","name":"amountWithdrawn","type":"uint256","indexed":false}],"type":"event","name":"NonBeaconChainETHWithdrawn","anonymous":false},{"inputs":[{"internalType":"uint40","name":"validatorIndex","type":"uint40","indexed":false},{"internalType":"uint64","name":"withdrawalTimestamp","type":"uint64","indexed":false},{"internalType":"address","name":"recipient","type":"address","indexed":true},{"internalType":"uint64","name":"partialWithdrawalAmountGwei","type":"uint64","indexed":false}],"type":"event","name":"PartialWithdrawalRedeemed","anonymous":false},{"inputs":[{"internalType":"address","name":"recipient","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"RestakedBeaconChainETHWithdrawn","anonymous":false},{"inputs":[{"internalType":"address","name":"podOwner","type":"address","indexed":true}],"type":"event","name":"RestakingActivated","anonymous":false},{"inputs":[{"internalType":"uint40","name":"validatorIndex","type":"uint40","indexed":false},{"internalType":"uint64","name":"balanceTimestamp","type":"uint64","indexed":false},{"internalType":"uint64","name":"newValidatorBalanceGwei","type":"uint64","indexed":false}],"type":"event","name":"ValidatorBalanceUpdated","anonymous":false},{"inputs":[{"internalType":"uint40","name":"validatorIndex","type":"uint40","indexed":false}],"type":"event","name":"ValidatorRestaked","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"MAX_RESTAKED_BALANCE_GWEI_PER_VALIDATOR","outputs":[{"internalType":"uint64","name":"","type":"uint64"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"activateRestaking"},{"inputs":[],"stateMutability":"view","type":"function","name":"eigenPodManager","outputs":[{"internalType":"contract IEigenPodManager","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"hasRestaked","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"initialize"},{"inputs":[],"stateMutability":"view","type":"function","name":"mostRecentWithdrawalTimestamp","outputs":[{"internalType":"uint64","name":"","type":"uint64"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"nonBeaconChainETHBalanceWei","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"podOwner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"validatorPubkeyHash","type":"bytes32"},{"internalType":"uint64","name":"slot","type":"uint64"}],"stateMutability":"view","type":"function","name":"provenWithdrawal","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"contract IERC20[]","name":"tokenList","type":"address[]"},{"internalType":"uint256[]","name":"amountsToWithdraw","type":"uint256[]"},{"internalType":"address","name":"recipient","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"recoverTokens"},{"inputs":[{"internalType":"bytes","name":"pubkey","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"bytes32","name":"depositDataRoot","type":"bytes32"}],"stateMutability":"payable","type":"function","name":"stake"},{"inputs":[{"internalType":"bytes32","name":"validatorPubkeyHash","type":"bytes32"}],"stateMutability":"view","type":"function","name":"validatorPubkeyHashToInfo","outputs":[{"internalType":"struct IEigenPod.ValidatorInfo","name":"","type":"tuple","components":[{"internalType":"uint64","name":"validatorIndex","type":"uint64"},{"internalType":"uint64","name":"restakedBalanceGwei","type":"uint64"},{"internalType":"uint64","name":"mostRecentBalanceUpdateTimestamp","type":"uint64"},{"internalType":"enum IEigenPod.VALIDATOR_STATUS","name":"status","type":"uint8"}]}]},{"inputs":[{"internalType":"bytes","name":"validatorPubkey","type":"bytes"}],"stateMutability":"view","type":"function","name":"validatorPubkeyToInfo","outputs":[{"internalType":"struct IEigenPod.ValidatorInfo","name":"","type":"tuple","components":[{"internalType":"uint64","name":"validatorIndex","type":"uint64"},{"internalType":"uint64","name":"restakedBalanceGwei","type":"uint64"},{"internalType":"uint64","name":"mostRecentBalanceUpdateTimestamp","type":"uint64"},{"internalType":"enum IEigenPod.VALIDATOR_STATUS","name":"status","type":"uint8"}]}]},{"inputs":[{"internalType":"bytes","name":"validatorPubkey","type":"bytes"}],"stateMutability":"view","type":"function","name":"validatorStatus","outputs":[{"internalType":"enum IEigenPod.VALIDATOR_STATUS","name":"","type":"uint8"}]},{"inputs":[{"internalType":"bytes32","name":"pubkeyHash","type":"bytes32"}],"stateMutability":"view","type":"function","name":"validatorStatus","outputs":[{"internalType":"enum IEigenPod.VALIDATOR_STATUS","name":"","type":"uint8"}]},{"inputs":[{"internalType":"uint64","name":"oracleTimestamp","type":"uint64"},{"internalType":"struct BeaconChainProofs.StateRootProof","name":"stateRootProof","type":"tuple","components":[{"internalType":"bytes32","name":"beaconStateRoot","type":"bytes32"},{"internalType":"bytes","name":"proof","type":"bytes"}]},{"internalType":"struct BeaconChainProofs.WithdrawalProof[]","name":"withdrawalProofs","type":"tuple[]","components":[{"internalType":"bytes","name":"withdrawalProof","type":"bytes"},{"internalType":"bytes","name":"slotProof","type":"bytes"},{"internalType":"bytes","name":"executionPayloadProof","type":"bytes"},{"internalType":"bytes","name":"timestampProof","type":"bytes"},{"internalType":"bytes","name":"historicalSummaryBlockRootProof","type":"bytes"},{"internalType":"uint64","name":"blockRootIndex","type":"uint64"},{"internalType":"uint64","name":"historicalSummaryIndex","type":"uint64"},{"internalType":"uint64","name":"withdrawalIndex","type":"uint64"},{"internalType":"bytes32","name":"blockRoot","type":"bytes32"},{"internalType":"bytes32","name":"slotRoot","type":"bytes32"},{"internalType":"bytes32","name":"timestampRoot","type":"bytes32"},{"internalType":"bytes32","name":"executionPayloadRoot","type":"bytes32"}]},{"internalType":"bytes[]","name":"validatorFieldsProofs","type":"bytes[]"},{"internalType":"bytes32[][]","name":"validatorFields","type":"bytes32[][]"},{"internalType":"bytes32[][]","name":"withdrawalFields","type":"bytes32[][]"}],"stateMutability":"nonpayable","type":"function","name":"verifyAndProcessWithdrawals"},{"inputs":[{"internalType":"uint64","name":"oracleTimestamp","type":"uint64"},{"internalType":"uint40[]","name":"validatorIndices","type":"uint40[]"},{"internalType":"struct BeaconChainProofs.StateRootProof","name":"stateRootProof","type":"tuple","components":[{"internalType":"bytes32","name":"beaconStateRoot","type":"bytes32"},{"internalType":"bytes","name":"proof","type":"bytes"}]},{"internalType":"bytes[]","name":"validatorFieldsProofs","type":"bytes[]"},{"internalType":"bytes32[][]","name":"validatorFields","type":"bytes32[][]"}],"stateMutability":"nonpayable","type":"function","name":"verifyBalanceUpdates"},{"inputs":[{"internalType":"uint64","name":"oracleTimestamp","type":"uint64"},{"internalType":"struct BeaconChainProofs.StateRootProof","name":"stateRootProof","type":"tuple","components":[{"internalType":"bytes32","name":"beaconStateRoot","type":"bytes32"},{"internalType":"bytes","name":"proof","type":"bytes"}]},{"internalType":"uint40[]","name":"validatorIndices","type":"uint40[]"},{"internalType":"bytes[]","name":"withdrawalCredentialProofs","type":"bytes[]"},{"internalType":"bytes32[][]","name":"validatorFields","type":"bytes32[][]"}],"stateMutability":"nonpayable","type":"function","name":"verifyWithdrawalCredentials"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"withdrawBeforeRestaking"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amountToWithdraw","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"withdrawNonBeaconChainETHBalanceWei"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"withdrawRestakedBeaconChainETH"},{"inputs":[],"stateMutability":"view","type":"function","name":"withdrawableRestakedExecutionLayerGwei","outputs":[{"internalType":"uint64","name":"","type":"uint64"}]}],"devdoc":{"kind":"dev","methods":{"mostRecentWithdrawalTimestamp()":{"details":"This variable is only updated when the `withdrawBeforeRestaking` function is called, which can only occur before `hasRestaked` is set to true for this pod. Proofs for this pod are only valid against Beacon Chain state roots corresponding to timestamps after the stored `mostRecentWithdrawalTimestamp`."},"verifyAndProcessWithdrawals(uint64,(bytes32,bytes),(bytes,bytes,bytes,bytes,bytes,uint64,uint64,uint64,bytes32,bytes32,bytes32,bytes32)[],bytes[],bytes32[][],bytes32[][])":{"params":{"oracleTimestamp":"is the timestamp of the oracle slot that the withdrawal is being proven against","validatorFields":"are the fields of the validators being proven","validatorFieldsProofs":"is the proof of the validator's fields' in the validator tree","withdrawalFields":"are the fields of the withdrawals being proven","withdrawalProofs":"is the information needed to check the veracity of the block numbers and withdrawals being proven"}},"verifyBalanceUpdates(uint64,uint40[],(bytes32,bytes),bytes[],bytes32[][])":{"details":"For more details on the Beacon Chain spec, see: https://github.com/ethereum/consensus-specs/blob/dev/specs/phase0/beacon-chain.md#validator","params":{"oracleTimestamp":"The oracleTimestamp whose state root the `proof` will be proven against.        Must be within `VERIFY_BALANCE_UPDATE_WINDOW_SECONDS` of the current block.","validatorFields":"are the fields of the \"Validator Container\", refer to consensus specs","validatorFieldsProofs":"proofs against the `beaconStateRoot` for each validator in `validatorFields`","validatorIndices":"is the list of indices of the validators being proven, refer to consensus specs "}},"verifyWithdrawalCredentials(uint64,(bytes32,bytes),uint40[],bytes[],bytes32[][])":{"params":{"oracleTimestamp":"is the Beacon Chain timestamp whose state root the `proof` will be proven against.","validatorFields":"are the fields of the \"Validator Container\", refer to consensus specs for details: https://github.com/ethereum/consensus-specs/blob/dev/specs/phase0/beacon-chain.md#validator","validatorIndices":"is the list of indices of the validators being proven, refer to consensus specs","withdrawalCredentialProofs":"is an array of proofs, where each proof proves each ETH validator's balance and withdrawal credentials against a beacon chain state root"}},"withdrawRestakedBeaconChainETH(address,uint256)":{"details":"The podOwner must have already proved sufficient withdrawals, so that this pod's `withdrawableRestakedExecutionLayerGwei` exceeds the `amountWei` input (when converted to GWEI).Reverts if `amountWei` is not a whole Gwei amount"}},"version":1},"userdoc":{"kind":"user","methods":{"MAX_RESTAKED_BALANCE_GWEI_PER_VALIDATOR()":{"notice":"The max amount of eth, in gwei, that can be restaked per validator"},"activateRestaking()":{"notice":"Called by the pod owner to activate restaking by withdrawing all existing ETH from the pod and preventing further withdrawals via \"withdrawBeforeRestaking()\""},"eigenPodManager()":{"notice":"The single EigenPodManager for EigenLayer"},"hasRestaked()":{"notice":"an indicator of whether or not the podOwner has ever \"fully restaked\" by successfully calling `verifyCorrectWithdrawalCredentials`."},"initialize(address)":{"notice":"Used to initialize the pointers to contracts crucial to the pod's functionality, in beacon proxy construction from EigenPodManager"},"mostRecentWithdrawalTimestamp()":{"notice":"The latest timestamp at which the pod owner withdrew the balance of the pod, via calling `withdrawBeforeRestaking`."},"nonBeaconChainETHBalanceWei()":{"notice":"any ETH deposited into the EigenPod contract via the `receive` fallback function"},"podOwner()":{"notice":"The owner of this EigenPod"},"provenWithdrawal(bytes32,uint64)":{"notice":"mapping that tracks proven withdrawals"},"recoverTokens(address[],uint256[],address)":{"notice":"called by owner of a pod to remove any ERC20s deposited in the pod"},"stake(bytes,bytes,bytes32)":{"notice":"Called by EigenPodManager when the owner wants to create another ETH validator."},"validatorPubkeyHashToInfo(bytes32)":{"notice":"Returns the validatorInfo struct for the provided pubkeyHash"},"validatorPubkeyToInfo(bytes)":{"notice":"Returns the validatorInfo struct for the provided pubkey"},"validatorStatus(bytes)":{"notice":"This returns the status of a given validator pubkey"},"validatorStatus(bytes32)":{"notice":"This returns the status of a given validator"},"verifyAndProcessWithdrawals(uint64,(bytes32,bytes),(bytes,bytes,bytes,bytes,bytes,uint64,uint64,uint64,bytes32,bytes32,bytes32,bytes32)[],bytes[],bytes32[][],bytes32[][])":{"notice":"This function records full and partial withdrawals on behalf of one of the Ethereum validators for this EigenPod"},"verifyBalanceUpdates(uint64,uint40[],(bytes32,bytes),bytes[],bytes32[][])":{"notice":"This function records an update (either increase or decrease) in the pod's balance in the StrategyManager.   It also verifies a merkle proof of the validator's current beacon chain balance.  "},"verifyWithdrawalCredentials(uint64,(bytes32,bytes),uint40[],bytes[],bytes32[][])":{"notice":"This function verifies that the withdrawal credentials of validator(s) owned by the podOwner are pointed to this contract. It also verifies the effective balance  of the validator.  It verifies the provided proof of the ETH validator against the beacon chain state root, marks the validator as 'active' in EigenLayer, and credits the restaked ETH in Eigenlayer."},"withdrawBeforeRestaking()":{"notice":"Called by the pod owner to withdraw the balance of the pod when `hasRestaked` is set to false"},"withdrawNonBeaconChainETHBalanceWei(address,uint256)":{"notice":"Called by the pod owner to withdraw the nonBeaconChainETHBalanceWei"},"withdrawRestakedBeaconChainETH(address,uint256)":{"notice":"Transfers `amountWei` in ether from this contract to the specified `recipient` addressCalled by EigenPodManager to withdrawBeaconChainETH that has been added to the EigenPod's balance due to a withdrawal from the beacon chain."},"withdrawableRestakedExecutionLayerGwei()":{"notice":"the amount of execution layer ETH in this contract that is staked in EigenLayer (i.e. withdrawn from beaconchain but not EigenLayer),"}},"version":1}},"settings":{"remappings":["@openzeppelin/=lib/openzeppelin-contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/IEigenPod.sol":"IEigenPod"},"evmVersion":"paris","libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol":{"keccak256":"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c","urls":["bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa","dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4","urls":["bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009","dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN"],"license":"MIT"},"src/interfaces/IBeaconChainOracle.sol":{"keccak256":"0x0fef07aa6179c77198f1514e12e628aa1c876e04f9c181ec853a322179e5be00","urls":["bzz-raw://51438325876cc2d4c77f58488a7e27b488015d1b663c50be6a5cafbd73b9c983","dweb:/ipfs/QmViCuGoYZzi6wtXA8PPKigqVv3KMuNxEVQ1Td9dGqjL18"],"license":"BUSL-1.1"},"src/interfaces/IDelegationManager.sol":{"keccak256":"0xe1626408822f552043f945d9aea18c5cbf878ef160da55e6f98706ed3a2acc07","urls":["bzz-raw://426f6dddc040f2040f48dd4236c4201a3c978b4417ec3b4bd1004f8a48b29aaa","dweb:/ipfs/QmWgY46nZiw1KQYNYMrJDTz7S9Y4KhyUoM9zVD92Mkf51S"],"license":"BUSL-1.1"},"src/interfaces/IETHPOSDeposit.sol":{"keccak256":"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c","urls":["bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91","dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz"],"license":"CC0-1.0"},"src/interfaces/IEigenPod.sol":{"keccak256":"0xb50c36ad96b6679bb80fd8331f949cbfbcba0f529026e1421a4d2bae64396eba","urls":["bzz-raw://5719181d780120f1e688c0da276992a8caf185815917f453b3550537c31ed4cc","dweb:/ipfs/QmYprRC5ZEXhz3zAUND5E8Xjn6s5TL8ZF8QbnndVq7aVPR"],"license":"BUSL-1.1"},"src/interfaces/IEigenPodManager.sol":{"keccak256":"0xd8a64dbed03d3a5cdbefe1af75968f2dde07f973749c2ef5197bf7187c3e448c","urls":["bzz-raw://27ccc7c1fd9352e9f9b357c9063d255dc0ed9583f43db09f786ac7497d7846b8","dweb:/ipfs/QmeJzuJkE9m2NUNwZSp4tGZEZmih1LeucePup8hzMVDRbG"],"license":"BUSL-1.1"},"src/interfaces/IPausable.sol":{"keccak256":"0x756023295ab9fb1159d36449d715b24bf2885bfa126b9e4dcf23a8a49bfd3ef3","urls":["bzz-raw://38e303f813393f7b10167315339e7a49bf234c43c123017a177778ea0c43aa96","dweb:/ipfs/Qme9i982quv15iY9PScvNrtyh7KQDAob8ZfNmdAzcBQaov"],"license":"BUSL-1.1"},"src/interfaces/IPauserRegistry.sol":{"keccak256":"0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49","urls":["bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d","dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx"],"license":"BUSL-1.1"},"src/interfaces/ISignatureUtils.sol":{"keccak256":"0x5e52482a31d94401a8502f3014c4aada1142b4450fc0596dff8e1866a85fe092","urls":["bzz-raw://17dc326c9361bc1453379f26545963557b2883b0c88bc07d4477e04dbcc0cc8c","dweb:/ipfs/QmZXT7A816W5JH2ymirE2ETaJttqztFCsEL22AV8oEfCK9"],"license":"BUSL-1.1"},"src/interfaces/ISlasher.sol":{"keccak256":"0x45dfaa2cfdde87f48a6ee38bb6fb739847aef7cf3f6137bdcd8c8a330559ec79","urls":["bzz-raw://1b7f6bd75b42fcaa91ceb7140cb2c41926a1fe6ee2d3161e4fe6186b181ba232","dweb:/ipfs/QmZjbdKiSs33C9i3GDc3sdD39Pz4YPkDoKftowoUF4kHmY"],"license":"BUSL-1.1"},"src/interfaces/IStrategy.sol":{"keccak256":"0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420","urls":["bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73","dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ"],"license":"BUSL-1.1"},"src/interfaces/IStrategyManager.sol":{"keccak256":"0xccd308b0996295c92058b70c3b83563c009c074cb6815329c5f35e1b1a0571f4","urls":["bzz-raw://cd1050445ff7aeb588b3b037aab53e2d92c3abd4620e94dfc95aca870e71b821","dweb:/ipfs/QmUC96Ctwn3KQr6VSqHPpAVJ5qEUSVnugaxiZ8gfXygW92"],"license":"BUSL-1.1"},"src/libraries/BeaconChainProofs.sol":{"keccak256":"0x7c444b786eabe8d9bf92586318e7c6883ed92772a630bd8fca4f65bc60f678d4","urls":["bzz-raw://dc49f3b34967ce7e9b0d9aa5a80eb470bff2278b91988c32e09bb76e1a42342c","dweb:/ipfs/QmPPANFwA6abUpk2jY6uLRVSHKCH9nkKhHgjLvDPmn6q57"],"license":"BUSL-1.1"},"src/libraries/Endian.sol":{"keccak256":"0xf3b72653ba2567a978d4612703fa5f71c5fcd015d8dac7818468f22772d90a9d","urls":["bzz-raw://cee9d09370d968138d775c39525db4cd0768d60d17be7685519de12444e7dd2f","dweb:/ipfs/QmUdGh8wpMei3edKiEWA6S96s9dRt4ekZKJ4nau356X8xQ"],"license":"BUSL-1.1"},"src/libraries/Merkle.sol":{"keccak256":"0x606eabfdc2241dab76f7c6e6754324ae9eb12b0a5068984d2c11e2cd2fa94d98","urls":["bzz-raw://a69c88393e9cf58ab066b75c75134b8c7cd51c242b726767cd8ec7e7d8351916","dweb:/ipfs/QmaNMz951WD5JZeQs5yav29mZn2E6fvdFm5u3moMupRzSM"],"license":"MIT"}},"version":1},"id":17}